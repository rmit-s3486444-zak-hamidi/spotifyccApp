{"version":3,"sources":["components/Navbar.js","components/Hero.js","components/Home.js","components/FormErrors.js","components/utility/FormValidation.js","components/auth/LogIn.js","components/Map.js","components/MapContainer.js","components/Content.js","components/auth/Register.js","components/auth/ForgotPassword.js","components/auth/ForgotPasswordVerification.js","components/auth/ChangePassword.js","components/auth/ChangePasswordConfirm.js","components/auth/Welcome.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","handleLogOut","_callee","event","regenerator_default","a","wrap","_context","prev","next","preventDefault","Auth","signOut","_this","props","auth","setAuthStatus","setUser","error","console","log","message","stop","this","react_default","createElement","className","role","aria-label","href","src","width","height","alt","isAuthenticated","user","username","onClick","Link","to","Component","Hero","Home","react","FormErrors","formerrors","blankfield","passwordmatch","apierrors","cognito","validateForm","state","inputs","document","getElementsByClassName","i","length","classList","contains","remove","hasOwnProperty","getElementById","add","firstname","lastname","email","verificationcode","password","oldpassword","newpassword","confirmpassword","LogIn","errors","clearErrorState","setState","handleSubmit","err","Validate","Object","objectSpread","signIn","sent","history","push","t0","onInputChange","defineProperty","target","id","value","components_FormErrors","onSubmit","type","aria-describedby","placeholder","onChange","mapStyles","position","CurrentLocation","_React$Component","classCallCheck","_this$props$initialCe","possibleConstructorReturn","getPrototypeOf","call","initialCenter","lat","lng","currentLocation","inherits","createClass","key","prevProps","prevState","google","loadMap","recenterMap","map","current","maps","center","LatLng","panTo","_this2","centerAroundCurrentLocation","navigator","geolocation","getCurrentPosition","pos","coords","latitude","longitude","mapRef","refs","node","ReactDOM","findDOMNode","zoom","_this$state$currentLo","mapConfig","assign","Map","_this3","children","React","Children","c","cloneElement","mapCenter","style","ref","renderChildren","defaultProps","visible","MapContainer","_Component","_getPrototypeOf2","_len","arguments","args","Array","_key","apply","concat","showingInfoWindow","activeMarker","selectedPlace","onMarkerClick","marker","e","onClose","dist","name","GoogleApiWrapper","apiKey","Content","Register","_this$state","signUpResponse","signUp","attributes","ForgotPassword","forgotPasswordHandler","forgotPassword","ForgotPasswordVerification","passwordVerificationHandler","forgotPasswordSubmit","ChangePassword","currentAuthenticatedUser","changePassword","ChangePasswordConfirmation","Welcome","library","faEdit","App","isAuthenticating","authenticated","currentSession","session","authProps","BrowserRouter","Navbar_Navbar","Switch","Route","exact","path","render","auth_LogIn","components_MapContainer","auth_Register","auth_ForgotPassword","auth_ForgotPasswordVerification","auth_ChangePassword","ChangePasswordConfirm","Boolean","window","location","hostname","match","Amplify","configure","mandatorySignId","region","config","REGION","userPoolId","USER_POOL_ID","userPoolWebClientId","APP_CLIENT_ID","src_App_0","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.31260438.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Auth } from 'aws-amplify';\nimport { Link } from 'react-router-dom';\n\nexport default class Navbar extends Component {\n  handleLogOut = async event => {\n    event.preventDefault();\n    try {\n      Auth.signOut();\n      this.props.auth.setAuthStatus(false);\n      this.props.auth.setUser(null);\n    }catch(error) {\n      console.log(error.message);\n    }\n  }\n  render() {\n    return (\n      <nav className=\"navbar\" role=\"navigation\" aria-label=\"main navigation\">\n        <div className=\"navbar-brand\">\n          <a className=\"navbar-item\" href=\"/\">\n            <img src=\"spotify-logo.png\" width=\"112\" height=\"28\" alt=\"hexal logo\" />\n          </a>\n        </div>\n\n          <div className=\"navbar-end\">\n            <div className=\"navbar-item\">\n              {this.props.auth.isAuthenticated && this.props.auth.user && (\n                <p>\n                  Hello {this.props.auth.user.username}\n                </p>\n              )}\n              <div className=\"buttons\">\n                {!this.props.auth.isAuthenticated && (\n                  <div>\n                    <a href=\"/register\" className=\"button is-primary\">\n                      <strong>Register</strong>\n                    </a>\n                    <a href=\"/login\" className=\"button is-light\">\n                      Log in\n                    </a>\n                  </div>\n                )}\n                {this.props.auth.isAuthenticated && (\n                  <div>\n                    <a href=\"/mapcontainer\" className=\"button is-light\">\n                  Your Location\n                  </a>\n                  <a href=\"/content\" className=\"button is-light\">\n                  Content\n                  </a>\n                  <a href=\"/changepassword\" className=\"button is-light\">\n                  Change Password\n                  </a>\n                  <a href=\"/\" onClick={this.handleLogOut} className=\"button is-light\">\n                  <Link to=\"/\">\n                    Log out \n                    </Link>\n                  </a>\n                  </div>\n                )}\n              </div>\n          </div>\n        </div>\n      </nav>\n    )\n  }\n}","import React from 'react';\n\nexport default function Hero() {\n  return (\n    <section className=\"hero is-primary\">\n      <div className=\"hero-body\">\n        <div className=\"container\">\n          <img src=\"singers.jpg\" alt=\"singers\" />\n        </div>\n      </div>\n    </section>\n  )\n}\n","import React, { Fragment } from 'react';\nimport Hero from './Hero';\n\nexport default function Home() {\n  return (\n    <Fragment>\n      <Hero />\n      <div className=\"box cta\">\n        <p className=\"has-text-centered\">\n           Welcome to our Spotify Application for Assignment 2, Cloud computing!\n        </p>\n      </div>\n    </Fragment>\n  )\n}\n","import React from \"react\";\n\nfunction FormErrors(props) {\n  if (\n    props.formerrors &&\n    (props.formerrors.blankfield || props.formerrors.passwordmatch)\n  ) {\n    return (\n      <div className=\"error container help is-danger\">\n        <div className=\"row justify-content-center\">\n          {props.formerrors.passwordmatch\n            ? \"Password value does not match confirm password value\"\n            : \"\"}\n        </div>\n        <div className=\"row justify-content-center help is-danger\">\n          {props.formerrors.blankfield ? \"All fields are required\" : \"\"}\n        </div>\n      </div>\n    );\n  } else if (props.apierrors) {\n    return (\n      <div className=\"error container help is-danger\">\n        <div className=\"row justify-content-center\">{props.apierrors}</div>\n      </div>\n    );\n  } else if (props.formerrors && props.formerrors.cognito) {\n    return (\n      <div className=\"error container help is-danger\">\n        <div className=\"row justify-content-center\">\n          {props.formerrors.cognito.message}\n        </div>\n      </div>\n    );\n  } else {\n    return <div />;\n  }\n}\n\nexport default FormErrors;","function validateForm(event, state) {\n  // clear all error messages\n  const inputs = document.getElementsByClassName(\"is-danger\");\n  for (let i = 0; i < inputs.length; i++) {\n    if (!inputs[i].classList.contains(\"error\")) {\n      inputs[i].classList.remove(\"is-danger\");\n    }\n  }\n\n  if (state.hasOwnProperty(\"username\") && state.username === \"\") {\n    document.getElementById(\"username\").classList.add(\"is-danger\");\n    return { blankfield: true };\n  }\n  if (state.hasOwnProperty(\"firstname\") && state.firstname === \"\") {\n    document.getElementById(\"firstname\").classList.add(\"is-danger\");\n    return { blankfield: true };\n  }\n  if (state.hasOwnProperty(\"lastname\") && state.lastname === \"\") {\n    document.getElementById(\"lastname\").classList.add(\"is-danger\");\n    return { blankfield: true };\n  }\n  if (state.hasOwnProperty(\"email\") && state.email === \"\") {\n    document.getElementById(\"email\").classList.add(\"is-danger\");\n    return { blankfield: true };\n  }\n  if (\n    state.hasOwnProperty(\"verificationcode\") &&\n    state.verificationcode === \"\"\n  ) {\n    document.getElementById(\"verificationcode\").classList.add(\"is-danger\");\n    return { blankfield: true };\n  }\n  if (state.hasOwnProperty(\"password\") && state.password === \"\") {\n    document.getElementById(\"password\").classList.add(\"is-danger\");\n    return { blankfield: true };\n  }\n  if (state.hasOwnProperty(\"oldpassword\") && state.oldpassword === \"\") {\n    document.getElementById(\"oldpassword\").classList.add(\"is-danger\");\n    return { blankfield: true };\n  }\n  if (state.hasOwnProperty(\"newpassword\") && state.newpassword === \"\") {\n    document.getElementById(\"newpassword\").classList.add(\"is-danger\");\n    return { blankfield: true };\n  }\n  if (state.hasOwnProperty(\"confirmpassword\") && state.confirmpassword === \"\") {\n    document.getElementById(\"confirmpassword\").classList.add(\"is-danger\");\n    return { blankfield: true };\n  }\n  if (\n    state.hasOwnProperty(\"password\") &&\n    state.hasOwnProperty(\"confirmpassword\") &&\n    state.password !== state.confirmpassword\n  ) {\n    document.getElementById(\"password\").classList.add(\"is-danger\");\n    document.getElementById(\"confirmpassword\").classList.add(\"is-danger\");\n    return { passwordmatch: true };\n  }\n  if (\n    state.hasOwnProperty(\"newpassword\") &&\n    state.hasOwnProperty(\"confirmpassword\") &&\n    state.newpassword !== state.confirmpassword\n  ) {\n    document.getElementById(\"newpassword\").classList.add(\"is-danger\");\n    document.getElementById(\"confirmpassword\").classList.add(\"is-danger\");\n    return { passwordmatch: true };\n  }\n  return;\n}\n\nexport default validateForm;","import React, { Component } from 'react';\nimport FormErrors from \"../FormErrors\";\nimport Validate from \"../utility/FormValidation\";\nimport { Auth } from \"aws-amplify\";\n\nclass LogIn extends Component {\n  state = {\n    username: \"\",\n    password: \"\",\n    errors: {\n      cognito: null,\n      blankfield: false\n    }\n  };\n\n  clearErrorState = () => {\n    this.setState({\n      errors: {\n        cognito: null,\n        blankfield: false\n      }\n    });\n  };\n\n  handleSubmit = async event => {\n    event.preventDefault();\n\n    // Form validation\n    this.clearErrorState();\n    const error = Validate(event, this.state);\n    if (error) {\n      this.setState({\n        errors: { ...this.state.errors, ...error }\n      });\n    }\n\n    // AWS Cognito integration here\n    try{\n      const user = await Auth.signIn(this.state.username, this.state.password);\n      console.log(user);\n      this.props.auth.setAuthStatus(true);\n      this.props.auth.setUser(user);\n      this.props.history.push(\"/content\")\n     }catch(error) {\n        let err = null;\n        !error.message ? err = { \"message\": error } : err = error;\n        this.setState({\n          errors: {\n            ...this.state.errors,\n            cognito: err\n          }\n        })\n     }\n  };\n\n  onInputChange = event => {\n    this.setState({\n      [event.target.id]: event.target.value\n    });\n    document.getElementById(event.target.id).classList.remove(\"is-danger\");\n  };\n\n  render() {\n    return (\n      <section className=\"section auth\">\n        <div className=\"container\">\n          <h1>Log in</h1>\n          <FormErrors formerrors={this.state.errors} />\n\n          <form onSubmit={this.handleSubmit}>\n            <div className=\"field\">\n              <p className=\"control\">\n                <input \n                  className=\"input\" \n                  type=\"text\"\n                  id=\"username\"\n                  aria-describedby=\"usernameHelp\"\n                  placeholder=\"Enter username or email\"\n                  value={this.state.username}\n                  onChange={this.onInputChange}\n                />\n              </p>\n            </div>\n            <div className=\"field\">\n              <p className=\"control has-icons-left\">\n                <input \n                  className=\"input\" \n                  type=\"password\"\n                  id=\"password\"\n                  placeholder=\"Password\"\n                  value={this.state.password}\n                  onChange={this.onInputChange}\n                />\n                <span className=\"icon is-small is-left\">\n                  <i className=\"fas fa-lock\"></i>\n                </span>\n              </p>\n            </div>\n            <div className=\"field\">\n              <p className=\"control\">\n                <a href=\"/forgotpassword\">Forgot password?</a>\n              </p>\n            </div>\n            <div className=\"field\">\n              <p className=\"control\">\n                <button className=\"button is-success\">\n                  Login\n                </button>\n              </p>\n            </div>\n          </form>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default LogIn;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nconst mapStyles = {\n  map: {\n    position: 'absolute',\n    width: '100%',\n    height: '100%'\n  }\n};\n\nexport class CurrentLocation extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const { lat, lng } = this.props.initialCenter;\n    this.state = {\n      currentLocation: {\n        lat: lat,\n        lng: lng\n      }\n    };\n  }\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.google !== this.props.google) {\n      this.loadMap();\n    }\n    if (prevState.currentLocation !== this.state.currentLocation) {\n      this.recenterMap();\n    }\n  }\n\n  recenterMap() {\n    const map = this.map;\n    const current = this.state.currentLocation;\n\n    const google = this.props.google;\n    const maps = google.maps;\n\n    if (map) {\n      let center = new maps.LatLng(current.lat, current.lng);\n      map.panTo(center);\n    }\n  }\n\n  componentDidMount() {\n    if (this.props.centerAroundCurrentLocation) {\n      if (navigator && navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition(pos => {\n          const coords = pos.coords;\n          this.setState({\n            currentLocation: {\n              lat: coords.latitude,\n              lng: coords.longitude\n            }\n          });\n        });\n      }\n    }\n    this.loadMap();\n  }\n\n  loadMap() {\n    if (this.props && this.props.google) {\n      const { google } = this.props;\n      const maps = google.maps;\n\n      const mapRef = this.refs.map;\n\n      const node = ReactDOM.findDOMNode(mapRef);\n\n      let { zoom } = this.props;\n      const { lat, lng } = this.state.currentLocation;\n      const center = new maps.LatLng(lat, lng);\n      const mapConfig = Object.assign(\n        {},\n        {\n          center: center,\n          zoom: zoom\n        }\n      );\n\n      this.map = new maps.Map(node, mapConfig);\n    }\n  }\n\n  renderChildren() {\n    const { children } = this.props;\n\n    if (!children) return;\n\n    return React.Children.map(children, c => {\n      if (!c) return;\n      return React.cloneElement(c, {\n        map: this.map,\n        google: this.props.google,\n        mapCenter: this.state.currentLocation\n      });\n    });\n  }\n\n  render() {\n    const style = Object.assign({}, mapStyles.map);\n   return (\n     <div>\n       <div style={style} ref=\"map\">\n         Map is loading... Please allow to use your current location\n       </div>\n       {this.renderChildren()}\n     </div>\n   );\n }\n\n}\nexport default CurrentLocation;\n\nCurrentLocation.defaultProps = {\n  zoom: 14,\n  initialCenter: {\n    lat: -37.8047,\n    lng: 144.9580\n  },\n  centerAroundCurrentLocation: false,\n  visible: true\n};","import React, { Component } from 'react';\nimport { GoogleApiWrapper, InfoWindow, Marker } from 'google-maps-react';\n\nimport CurrentLocation from './Map';\n\nexport class MapContainer extends Component {\n  state = {\n    showingInfoWindow: false,\n    activeMarker: {},\n    selectedPlace: {}\n  };\n\n  onMarkerClick = (props, marker, e) =>\n    this.setState({\n      selectedPlace: props,\n      activeMarker: marker,\n      showingInfoWindow: true\n    });\n\n  onClose = props => {\n    if (this.state.showingInfoWindow) {\n      this.setState({\n        showingInfoWindow: false,\n        activeMarker: null\n      });\n    }\n  };\n\n  render() {\n    return (\n      <CurrentLocation\n        centerAroundCurrentLocation\n        google={this.props.google}\n      >\n        <Marker onClick={this.onMarkerClick} name={'Your current location'} />\n        <InfoWindow\n          marker={this.state.activeMarker}\n          visible={this.state.showingInfoWindow}\n          onClose={this.onClose}\n        >\n          <div>\n            <h4>{this.state.selectedPlace.name}</h4>\n          </div>\n        </InfoWindow>\n      </CurrentLocation>\n    );\n  }\n}\n\nexport default GoogleApiWrapper({\n  apiKey: 'AIzaSyDljNBPx_w8A2hvpIZNM7bkujWt4HrH76I'\n})(MapContainer);\n","import React from 'react';\n\nexport default function Content() {\n  return (\n    <section className=\"section auth\">\n      <div className=\"container\">\n        <h1>This is where the content will be!</h1>\n        <p>Only logged in users can view this</p>\n      </div>\n    </section>\n  )\n}\n","import React, { Component } from 'react';\nimport FormErrors from \"../FormErrors\";\nimport Validate from \"../utility/FormValidation\";\nimport { Auth } from \"aws-amplify\";\n\nclass Register extends Component {\n  state = {\n    username: \"\",\n    email: \"\",\n    password: \"\",\n    confirmpassword: \"\",\n    errors: {\n      cognito: null,\n      blankfield: false,\n      passwordmatch: false\n    }\n  }\n\n  clearErrorState = () => {\n    this.setState({\n      errors: {\n        cognito: null,\n        blankfield: false,\n        passwordmatch: false\n      }\n    });\n  }\n\n  handleSubmit = async event => {\n    event.preventDefault();\n\n    // Form validation\n    this.clearErrorState();\n    const error = Validate(event, this.state);\n    if (error) {\n      this.setState({\n        errors: { ...this.state.errors, ...error }\n      });\n    }\n\n    // AWS Cognito integration here\n    const { username, email, password } = this.state;\n    try{\n     const signUpResponse = await Auth.signUp({\n      username,\n      password,\n      attributes: {\n        email: email\n      }\n     });\n     console.log(signUpResponse);\n     this.props.history.push(\"/welcome\")\n    }catch(error) {\n       let err = null;\n       !error.message ? err = { \"message\": error } : err = error;\n       this.setState({\n         errors: {\n           ...this.state.errors,\n           cognito: err\n         }\n       })\n    }\n  };\n\n  onInputChange = event => {\n    this.setState({\n      [event.target.id]: event.target.value\n    });\n    document.getElementById(event.target.id).classList.remove(\"is-danger\");\n  }\n\n  render() {\n    return (\n      <section className=\"section auth\">\n        <div className=\"container\">\n          <h1>Register</h1>\n          <FormErrors formerrors={this.state.errors} />\n\n          <form onSubmit={this.handleSubmit}>\n            <div className=\"field\">\n              <p className=\"control\">\n                <input \n                  className=\"input\" \n                  type=\"text\"\n                  id=\"username\"\n                  aria-describedby=\"userNameHelp\"\n                  placeholder=\"Enter username\"\n                  value={this.state.username}\n                  onChange={this.onInputChange}\n                />\n              </p>\n            </div>\n            <div className=\"field\">\n              <p className=\"control has-icons-left has-icons-right\">\n                <input \n                  className=\"input\" \n                  type=\"email\"\n                  id=\"email\"\n                  aria-describedby=\"emailHelp\"\n                  placeholder=\"Enter email\"\n                  value={this.state.email}\n                  onChange={this.onInputChange}\n                />\n                <span className=\"icon is-small is-left\">\n                  <i className=\"fas fa-envelope\"></i>\n                </span>\n              </p>\n            </div>\n            <div className=\"field\">\n              <p className=\"control has-icons-left\">\n                <input \n                  className=\"input\" \n                  type=\"password\"\n                  id=\"password\"\n                  placeholder=\"Password\"\n                  value={this.state.password}\n                  onChange={this.onInputChange}\n                />\n                <span className=\"icon is-small is-left\">\n                  <i className=\"fas fa-lock\"></i>\n                </span>\n              </p>\n            </div>\n            <div className=\"field\">\n              <p className=\"control has-icons-left\">\n                <input \n                  className=\"input\" \n                  type=\"password\"\n                  id=\"confirmpassword\"\n                  placeholder=\"Confirm password\"\n                  value={this.state.confirmpassword}\n                  onChange={this.onInputChange}\n                />\n                <span className=\"icon is-small is-left\">\n                  <i className=\"fas fa-lock\"></i>\n                </span>\n              </p>\n            </div>\n            <div className=\"field\">\n              <p className=\"control\">\n                <button className=\"button is-success\">\n                  Register\n                </button>\n              </p>\n            </div>\n          </form>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default Register;","import React, { Component } from 'react';\nimport FormErrors from \"../FormErrors\";\nimport Validate from \"../utility/FormValidation\";\nimport { Auth } from 'aws-amplify';\n\nclass ForgotPassword extends Component {\n  state = {\n    email: \"\",\n    errors: {\n      cognito: null,\n      blankfield: false\n    }\n  }\n\n  clearErrorState = () => {\n    this.setState({\n      errors: {\n        cognito: null,\n        blankfield: false\n      }\n    });\n  }\n\n  forgotPasswordHandler = async event => {\n    event.preventDefault();\n\n    // Form validation\n    this.clearErrorState();\n    const error = Validate(event, this.state);\n    if (error) {\n      this.setState({\n        errors: { ...this.state.errors, ...error }\n      });\n    }\n\n    // AWS Cognito integration here\n    try{\n    await Auth.forgotPassword(this.state.email);\n    this.props.history.push('/forgotpasswordverification');\n    }catch(error){\n      console.log(error);\n    }\n  }\n\n  onInputChange = event => {\n    this.setState({\n      [event.target.id]: event.target.value\n    });\n    document.getElementById(event.target.id).classList.remove(\"is-danger\");\n  }\n\n  render() {\n    return (\n      <section className=\"section auth\">\n        <div className=\"container\">\n          <h1>Forgot your password?</h1>\n          <p>\n            Please enter the email address and we will email you a code to change your password!\n          </p>\n          <FormErrors formerrors={this.state.errors} />\n\n          <form onSubmit={this.forgotPasswordHandler}>\n            <div className=\"field\">\n              <p className=\"control has-icons-left has-icons-right\">\n                <input\n                  type=\"email\"\n                  className=\"input\"\n                  id=\"email\"\n                  aria-describedby=\"emailHelp\"\n                  placeholder=\"Enter email\"\n                  value={this.state.email}\n                  onChange={this.onInputChange}\n                />\n                <span className=\"icon is-small is-left\">\n                  <i className=\"fas fa-envelope\"></i>\n                </span>\n              </p>\n            </div>\n            <div className=\"field\">\n              <p className=\"control\">\n                <button className=\"button is-success\">\n                  Submit\n                </button>\n              </p>\n            </div>\n          </form>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default ForgotPassword;","import React, { Component } from 'react';\nimport FormErrors from \"../FormErrors\";\nimport Validate from \"../utility/FormValidation\";\nimport { Auth } from 'aws-amplify';\n\nclass ForgotPasswordVerification extends Component {\n  state = {\n    verificationcode: \"\",\n    email: \"\",\n    newpassword: \"\",\n    errors: {\n      cognito: null,\n      blankfield: false\n    }\n  };\n\n  clearErrorState = () => {\n    this.setState({\n      errors: {\n        cognito: null,\n        blankfield: false\n      }\n    });\n  };\n\n  passwordVerificationHandler = async event => {\n    event.preventDefault();\n\n    // Form validation\n    this.clearErrorState();\n    const error = Validate(event, this.state);\n    if (error) {\n      this.setState({\n        errors: { ...this.state.errors, ...error }\n      });\n    }\n\n    // AWS Cognito integration here\n    try{\n      await Auth.forgotPasswordSubmit(\n        this.state.email,\n        this.state.verificationcode,\n        this.state.newpassword\n        );\n        this.props.history.push(\"/changepasswordconfirmation\");\n      }catch(error){\n        console.log(error);\n      }\n  };\n\n  onInputChange = event => {\n    this.setState({\n      [event.target.id]: event.target.value\n    });\n    document.getElementById(event.target.id).classList.remove(\"is-danger\");\n  };\n\n  render() {\n    return (\n      <section className=\"section auth\">\n        <div className=\"container\">\n          <h1>Set new password</h1>\n          <p>\n            Please enter the code, your email address and a new password below\n          </p>\n          <FormErrors formerrors={this.state.errors} />\n\n          <form onSubmit={this.passwordVerificationHandler}>\n            <div className=\"field\">\n              <p className=\"control\">\n                <input\n                  type=\"text\"\n                  className=\"input\"\n                  id=\"verificationcode\"\n                  aria-describedby=\"verificationCodeHelp\"\n                  placeholder=\"Enter verification code\"\n                  value={this.state.verificationcode}\n                  onChange={this.onInputChange}\n                />\n              </p>\n            </div>\n            <div className=\"field\">\n              <p className=\"control has-icons-left\">\n                <input \n                  className=\"input\" \n                  type=\"email\"\n                  id=\"email\"\n                  aria-describedby=\"emailHelp\"\n                  placeholder=\"Enter email\"\n                  value={this.state.email}\n                  onChange={this.onInputChange}\n                />\n                <span className=\"icon is-small is-left\">\n                  <i className=\"fas fa-envelope\"></i>\n                </span>\n              </p>\n            </div>\n            <div className=\"field\">\n              <p className=\"control has-icons-left\">\n                <input\n                  type=\"password\"\n                  className=\"input\"\n                  id=\"newpassword\"\n                  placeholder=\"New password\"\n                  value={this.state.newpassword}\n                  onChange={this.onInputChange}\n                />\n                <span className=\"icon is-small is-left\">\n                  <i className=\"fas fa-lock\"></i>\n                </span>\n              </p>\n            </div>\n            <div className=\"field\">\n              <p className=\"control\">\n                <button className=\"button is-success\">\n                  Change password\n                </button>\n              </p>\n            </div>\n          </form>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default ForgotPasswordVerification;","import React, { Component } from 'react';\nimport FormErrors from \"../FormErrors\";\nimport Validate from \"../utility/FormValidation\";\nimport { Auth } from 'aws-amplify';\n\nclass ChangePassword extends Component {\n  state = {\n    oldpassword: \"\",\n    newpassword: \"\",\n    confirmpassword: \"\",\n    errors: {\n      cognito: null,\n      blankfield: false,\n      passwordmatch: false\n    }\n  }\n\n  clearErrorState = () => {\n    this.setState({\n      errors: {\n        cognito: null,\n        blankfield: false,\n        passwordmatch: false\n      }\n    });\n  }\n\n  handleSubmit = async event => {\n    event.preventDefault();\n\n    // Form validation\n    this.clearErrorState();\n    const error = Validate(event, this.state);\n    if (error) {\n      this.setState({\n        errors: { ...this.state.errors, ...error }\n      });\n    }\n\n    // AWS Cognito integration here\n    try{\n     const user = await Auth.currentAuthenticatedUser();\n     console.log(user);\n     await Auth.changePassword(\n       user,\n       this.state.oldpassword,\n       this.state.newpassword\n     );\n     this.props.history.push(\"/changepasswordconfirmation\");\n    }catch(error){\n        console.log(error);\n      }\n  };\n\n  onInputChange = event => {\n    this.setState({\n      [event.target.id]: event.target.value\n    });\n    document.getElementById(event.target.id).classList.remove(\"is-danger\");\n  }\n\n  render() {\n    return (\n      <section className=\"section auth\">\n        <div className=\"container\">\n          <h1>Change Password</h1>\n          <FormErrors formerrors={this.state.errors} />\n\n          <form onSubmit={this.handleSubmit}>\n            <div className=\"field\">\n              <p className=\"control has-icons-left\">\n                <input \n                  className=\"input\" \n                  type=\"password\"\n                  id=\"oldpassword\"\n                  placeholder=\"Old password\"\n                  value={this.state.oldpassword}\n                  onChange={this.onInputChange}\n                />\n                <span className=\"icon is-small is-left\">\n                  <i className=\"fas fa-lock\"></i>\n                </span>\n              </p>\n            </div>\n            <div className=\"field\">\n              <p className=\"control has-icons-left\">\n                <input\n                  className=\"input\"\n                  type=\"password\"\n                  id=\"newpassword\"\n                  placeholder=\"New password\"\n                  value={this.state.newpassword}\n                  onChange={this.onInputChange}\n                />\n                <span className=\"icon is-small is-left\">\n                  <i className=\"fas fa-lock\"></i>\n                </span>\n              </p>\n            </div>\n            <div className=\"field\">\n              <p className=\"control has-icons-left\">\n                <input\n                  className=\"input\"\n                  type=\"password\"\n                  id=\"confirmpassword\"\n                  placeholder=\"Confirm password\"\n                  value={this.state.confirmpassword}\n                  onChange={this.onInputChange}\n                />\n                <span className=\"icon is-small is-left\">\n                  <i className=\"fas fa-lock\"></i>\n                </span>\n              </p>\n            </div>\n            <div className=\"field\">\n              <p className=\"control\">\n                <button className=\"button is-success\">\n                  Change password\n                </button>\n              </p>\n            </div>\n          </form>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default ChangePassword;","import React, { Component } from \"react\";\n\nclass ChangePasswordConfirmation extends Component {\n  render() {\n    return (\n      <section className=\"section auth\">\n        <div className=\"container\">\n          <h1>Change Password</h1>\n          <p>Your password has been updated!</p>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default ChangePasswordConfirmation;","import React from 'react';\n\nexport default function Welcome() {\n  return (\n    <section className=\"section auth\">\n      <div className=\"container\">\n        <h1>Welcome!</h1>\n        <p>You have successfully register a new account</p>\n        <p>We have sent you an email to confirm your account</p>\n        <p>Please click on the link!</p>\n      </div>\n    </section>\n  )\n}\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport Home from './components/Home';\nimport LogIn from './components/auth/LogIn';\nimport Map from './components/Map';\nimport MapContainer from './components/MapContainer';\nimport Content from './components/Content';\nimport Register from './components/auth/Register';\nimport ForgotPassword from './components/auth/ForgotPassword';\nimport ForgotPasswordVerification from './components/auth/ForgotPasswordVerification';\nimport ChangePassword from './components/auth/ChangePassword';\nimport ChangePasswordConfirm from './components/auth/ChangePasswordConfirm';\nimport Welcome from './components/auth/Welcome';\nimport { Auth } from 'aws-amplify';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { faEdit } from '@fortawesome/free-solid-svg-icons';\nlibrary.add(faEdit);\n\nclass App extends Component {\n\n  state = {\n    isAuthenticated: false,\n    isAuthenticating: true,\n    user: null\n  }\n\n  setAuthStatus = authenticated => {\n    this.setState({ isAuthenticated: authenticated});\n  }\n\n   setUser = user => {\n     this.setState({ user: user});\n   }\n\n  async componentDidMount() {\n    try{\n    const session = await Auth.currentSession();\n    this.setAuthStatus(true);\n    console.log(session);\n    const user = await Auth.currentAuthenticatedUser();\n    this.setUser(user);\n    }catch(error){\n      console.log(error);\n    }\n    this.setState({ isAuthenticating: false });\n  }\n\n  render() {\n    const authProps = {\n      isAuthenticated: this.state.isAuthenticated,\n      user: this.state.user,\n      setAuthStatus: this.setAuthStatus,\n      setUser: this.setUser\n    }\n    return (\n      !this.state.isAuthenticating &&\n      <div className=\"App\">\n        <Router>\n          <div>\n            <Navbar auth={authProps}/>\n            <Switch>\n              <Route exact path=\"/\" render={(props) => <Home {...props} auth={authProps} />} />\n              <Route exact path=\"/login\" render={(props) => <LogIn {...props} auth={authProps} />} />\n              <Route exact path=\"/mapcontainer\" render={(props) => <MapContainer {...props} auth={authProps} />} />\n              <Route exact path=\"/map\" render={(props) => <Map {...props} auth={authProps} />} />\n              <Route exact path=\"/content\" render={(props) => <Content {...props} auth={authProps} />} />\n              <Route exact path=\"/register\" render={(props) => <Register {...props} auth={authProps} />} />\n              <Route exact path=\"/forgotpassword\" render={(props) => <ForgotPassword {...props} auth={authProps} />} />\n              <Route exact path=\"/forgotpasswordverification\" render={(props) => <ForgotPasswordVerification {...props} auth={authProps} />} />\n              <Route exact path=\"/changepassword\" render={(props) => <ChangePassword {...props} auth={authProps} />} />\n              <Route exact path=\"/changepasswordconfirmation\" render={(props) => <ChangePasswordConfirm {...props} auth={authProps} />} />\n              <Route exact path=\"/welcome\" render={(props) => <Welcome {...props} auth={authProps} />} />\n            </Switch>\n          </div>\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.min.css';\nimport './index.css';\nimport App from './App';\nimport Amplify from 'aws-amplify';\nimport config from './config';\nimport * as serviceWorker from './serviceWorker';\n\n\nAmplify.configure({\n    Auth:{\n        mandatorySignId: true,\n        region: config.cognito.REGION,\n        userPoolId: config.cognito.USER_POOL_ID,\n        userPoolWebClientId: config.cognito.APP_CLIENT_ID,\n    }\n});\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}